# Generated by sila2.code_generator; sila2.__version__: 0.10.1
# -----
# This class does not do anything useful at runtime. Its only purpose is to provide type annotations.
# Since sphinx does not support .pyi files (yet?), so this is a .py file.
# -----

from __future__ import annotations

from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from typing import Iterable, Optional

    from atlas_types import Recommend_IntermediateResponses, Recommend_Responses
    from sila2.client import (
        ClientMetadataInstance,
        ClientObservableCommandInstanceWithIntermediateResponses,
        ClientUnobservableProperty,
    )


class AtlasClient:
    """

    A Sila_server for Atlas

    """

    Status: ClientUnobservableProperty[str]
    """
    Indicates the status of Atlas
    """

    def Recommend(
        self, Campaign: bytes, Config: str, *, metadata: Optional[Iterable[ClientMetadataInstance]] = None
    ) -> ClientObservableCommandInstanceWithIntermediateResponses[Recommend_IntermediateResponses, Recommend_Responses]:
        """
        get recommendation from Atlas
        """
        ...
